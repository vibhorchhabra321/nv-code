name: Cleanup AMI Definition
on:
  workflow_call:
    inputs:
      base:
        description: "Base AMI Prefix"
        required: true
        type: string
      region:
        description: "AWS Region"
        required: true
        type: string
  
env:
  REGISTRY: ghcr.io
  EU_USERNAME: ${{ secrets.EU_USERNAME }}
  EU_PASSWORD: ${{ secrets.EU_PASSWORD }}

jobs:
  cleanup:
    runs-on: [Linux, ntt, uk, self-hosted]
    permissions:
      packages: read
      id-token: write
      contents: write
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: log in to container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: pull ansible base image
        run: docker pull ${{ env.REGISTRY }}/lexisnexis-rba/tas/windows-self-service/ansible:v1
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with: 
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::152186781777:role/github-ADFS-AdminLinux-wss
          role-session-name: WSSGithubSession
          #role-duration-seconds: 7200
          
      - name: run base ansible playbook
        env:
          base: ${{ inputs.base }}
          region: ${{ inputs.region }}
        run: |
          docker run -v `pwd`:/etc/ansible/ \
          ${{ env.REGISTRY }}/lexisnexis-rba/tas/windows-self-service/ansible:v1 \
          ansible-playbook build/cleanup.yml --extra-vars "aws_access_key=${AWS_ACCESS_KEY_ID} \
          aws_secret_key=${AWS_SECRET_ACCESS_KEY} security_token=${AWS_SESSION_TOKEN} \
          base='$base' region='$region'"
